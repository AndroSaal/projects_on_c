#ifndef STR_DECIMAL_CONVERTORS
#define STR_DECIMAL_CONVERTORS

#include <stdbool.h>
#include <string.h>

#include "../s21_decimal.h"

#define MAX_CHARS_IN_STR 31
// table with powers of 2
#define POWER_OF_TWO_ELEMENTS_QUAL 96
#define POWER_OF_TWO                            \
  {                                             \
      "1",                             /*2^0*/  \
      "2",                             /*2^1*/  \
      "4",                             /*2^2*/  \
      "8",                             /*2^3*/  \
      "16",                            /*2^4*/  \
      "32",                            /*2^5*/  \
      "64",                            /*2^6*/  \
      "128",                           /*2^7*/  \
      "256",                           /*2^8*/  \
      "512",                           /*2^9*/  \
      "1024",                          /*2^10*/ \
      "2048",                          /*2^11*/ \
      "4096",                          /*2^12*/ \
      "8192",                          /*2^13*/ \
      "16384",                         /*2^14*/ \
      "32768",                         /*2^15*/ \
      "65536",                         /*2^16*/ \
      "131072",                        /*2^17*/ \
      "262144",                        /*2^18*/ \
      "524288",                        /*2^19*/ \
      "1048576",                       /*2^20*/ \
      "2097152",                       /*2^21*/ \
      "4194304",                       /*2^22*/ \
      "8388608",                       /*2^23*/ \
      "16777216",                      /*2^24*/ \
      "33554432",                      /*2^25*/ \
      "67108864",                      /*2^26*/ \
      "134217728",                     /*2^27*/ \
      "268435456",                     /*2^28*/ \
      "536870912",                     /*2^29*/ \
      "1073741824",                    /*2^30*/ \
      "2147483648",                    /*2^31*/ \
      "4294967296",                    /*2^32*/ \
      "8589934592",                    /*2^33*/ \
      "17179869184",                   /*2^34*/ \
      "34359738368",                   /*2^35*/ \
      "68719476736",                   /*2^36*/ \
      "137438953472",                  /*2^37*/ \
      "274877906944",                  /*2^38*/ \
      "549755813888",                  /*2^39*/ \
      "1099511627776",                 /*2^40*/ \
      "2199023255552",                 /*2^41*/ \
      "4398046511104",                 /*2^42*/ \
      "8796093022208",                 /*2^43*/ \
      "17592186044416",                /*2^44*/ \
      "35184372088832",                /*2^45*/ \
      "70368744177664",                /*2^46*/ \
      "140737488355328",               /*2^47*/ \
      "281474976710656",               /*2^48*/ \
      "562949953421312",               /*2^49*/ \
      "1125899906842624",              /*2^50*/ \
      "2251799813685248",              /*2^51*/ \
      "4503599627370496",              /*2^52*/ \
      "9007199254740992",              /*2^53*/ \
      "18014398509481984",             /*2^54*/ \
      "36028797018963968",             /*2^55*/ \
      "72057594037927936",             /*2^56*/ \
      "144115188075855872",            /*2^57*/ \
      "288230376151711744",            /*2^58*/ \
      "576460752303423488",            /*2^59*/ \
      "1152921504606846976",           /*2^60*/ \
      "2305843009213693952",           /*2^61*/ \
      "4611686018427387904",           /*2^62*/ \
      "9223372036854775808",           /*2^63*/ \
      "18446744073709551616",          /*2^64*/ \
      "36893488147419103232",          /*2^65*/ \
      "73786976294838206464",          /*2^66*/ \
      "147573952589676412928",         /*2^67*/ \
      "295147905179352825856",         /*2^68*/ \
      "590295810358705651712",         /*2^69*/ \
      "1180591620717411303424",        /*2^70*/ \
      "2361183241434822606848",        /*2^71*/ \
      "4722366482869645213696",        /*2^72*/ \
      "9444732965739290427392",        /*2^73*/ \
      "18889465931478580854784",       /*2^74*/ \
      "37778931862957161709568",       /*2^75*/ \
      "75557863725914323419136",       /*2^76*/ \
      "151115727451828646838272",      /*2^77*/ \
      "302231454903657293676544",      /*2^78*/ \
      "604462909807314587353088",      /*2^79*/ \
      "1208925819614629174706176",     /*2^80*/ \
      "2417851639229258349412352",     /*2^81*/ \
      "4835703278458516698824704",     /*2^82*/ \
      "9671406556917033397649408",     /*2^83*/ \
      "19342813113834066795298816",    /*2^84*/ \
      "38685626227668133590597632",    /*2^85*/ \
      "77371252455336267181195264",    /*2^86*/ \
      "154742504910672534362390528",   /*2^87*/ \
      "309485009821345068724781056",   /*2^88*/ \
      "618970019642690137449562112",   /*2^89*/ \
      "1237940039285380274899124224",  /*2^90*/ \
      "2475880078570760549798248448",  /*2^91*/ \
      "4951760157141521099596496896",  /*2^92*/ \
      "9903520314283042199192993792",  /*2^93*/ \
      "19807040628566084398385987584", /*2^94*/ \
      "39614081257132168796771975168"  /*2^95*/ \
  }

int s21_from_str_to_decimal(char* str, s21_decimal* dec);
void s21_add_digit_to_decimal(char str, s21_decimal* dec, int index);
int s21_from_decimal_to_str(char* str, s21_decimal value);
void s21_add_to_the_term(char* str_term, char* str_power);
void s21_set_zero(char* str);
void s21_sum_string(char* str, char* str_term);
void s21_set_point(char* str, int scale);
void s21_delete_extra_zeros(char* str);

#endif